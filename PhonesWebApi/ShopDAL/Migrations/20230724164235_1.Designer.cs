// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopDAL;

#nullable disable

namespace ShopDAL.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20230724164235_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopDAL.Phone", b =>
                {
                    b.Property<int>("PhoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhoneId"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal");

                    b.HasKey("PhoneId");

                    b.ToTable("Phones");

                    b.HasData(
                        new
                        {
                            PhoneId = 1,
                            Color = "Gold",
                            Details = "x",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/10934083/large/0bbb2892562c4e179d80c68b328f60ee.jpg",
                            Model = "iPhone 14 Pro 512GB",
                            Price = 6000m
                        },
                        new
                        {
                            PhoneId = 2,
                            Color = "Black",
                            Details = "x",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/10083611/large/9b814085bdafb47be8da7b14c31ad983.png",
                            Model = "iPhone 14 Pro Max 512GB",
                            Price = 6500m
                        },
                        new
                        {
                            PhoneId = 3,
                            Color = "Purple",
                            Details = "x",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/10083610/large/0edebdde77cd1f4f48397a3471bedcce.png",
                            Model = "iPhone 13 128GB",
                            Price = 3100m
                        },
                        new
                        {
                            PhoneId = 4,
                            Color = "Silver",
                            Details = "x",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/10083609/large/3efcbab52ccaefaacc94441dd01c62c3.png",
                            Model = "iPhone 14 Pro 256GB",
                            Price = 5070m
                        });
                });

            modelBuilder.Entity("ShopDAL.ProductOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsOrders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 1,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("ShopDAL.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "Adam@gmail.com",
                            Login = "Adam",
                            Password = "A111",
                            PhoneNumber = "0558748747",
                            RoleID = 1
                        },
                        new
                        {
                            UserId = 2,
                            Email = "Moshe@gmail.com",
                            Login = "Moshe",
                            Password = "M1111",
                            PhoneNumber = "0548983634",
                            RoleID = 2
                        },
                        new
                        {
                            UserId = 3,
                            Email = "Lidan@gmail.com",
                            Login = "Lidan",
                            Password = "L1111",
                            PhoneNumber = "0539856321",
                            RoleID = 2
                        });
                });

            modelBuilder.Entity("ShopDAL.UserOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersOrders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Created = new DateTime(2023, 7, 24, 19, 42, 35, 10, DateTimeKind.Local).AddTicks(1366),
                            UserId = 2
                        },
                        new
                        {
                            OrderId = 2,
                            Created = new DateTime(2023, 7, 24, 19, 42, 35, 10, DateTimeKind.Local).AddTicks(1414),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ShopDAL.ProductOrder", b =>
                {
                    b.HasOne("ShopDAL.UserOrder", "UserOrder")
                        .WithMany("ProductsOrder")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDAL.Phone", "Product")
                        .WithMany("PhonesOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("UserOrder");
                });

            modelBuilder.Entity("ShopDAL.UserOrder", b =>
                {
                    b.HasOne("ShopDAL.User", "User")
                        .WithMany("UserOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopDAL.Phone", b =>
                {
                    b.Navigation("PhonesOrders");
                });

            modelBuilder.Entity("ShopDAL.User", b =>
                {
                    b.Navigation("UserOrders");
                });

            modelBuilder.Entity("ShopDAL.UserOrder", b =>
                {
                    b.Navigation("ProductsOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
