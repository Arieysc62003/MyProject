// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopDAL;

#nullable disable

namespace ShopDAL.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopDAL.Phone", b =>
                {
                    b.Property<int>("PhoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhoneId"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal");

                    b.HasKey("PhoneId");

                    b.ToTable("Phones");

                    b.HasData(
                        new
                        {
                            PhoneId = 1,
                            Color = "Gold",
                            Details = "The new iPhone 14 Pro Max from Apple! The powerful and modern one with the powerful processor that changes the legal game and advanced technology for an extraordinary user experience. A combination of impressive design and a spectacular and more advanced photography setup than ever before!",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/10934083/large/0bbb2892562c4e179d80c68b328f60ee.jpg",
                            Model = "iPhone 14 Pro Max",
                            Price = 6000m
                        },
                        new
                        {
                            PhoneId = 2,
                            Color = "Black",
                            Details = "The new iPhone 14  from Apple! The powerful and modern one with the powerful processor that changes the legal game and advanced technology for an extraordinary user experience. A combination of impressive design and a spectacular and more advanced photography setup than ever before!",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/10083611/large/9b814085bdafb47be8da7b14c31ad983.png",
                            Model = "iPhone 14",
                            Price = 6500m
                        },
                        new
                        {
                            PhoneId = 3,
                            Color = "Purple",
                            Details = "The new iPhone 14 Pro from Apple! The powerful and modern one with the powerful processor that changes the legal game and advanced technology for an extraordinary user experience. A combination of impressive design and a spectacular and more advanced photography setup than ever before!",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/10083610/large/0edebdde77cd1f4f48397a3471bedcce.png",
                            Model = "iPhone 14 Pro",
                            Price = 3100m
                        },
                        new
                        {
                            PhoneId = 36,
                            Color = "Silver",
                            Details = "The new iPhone 12 pro from Apple! The powerful and modern one with the powerful processor that changes the legal game and advanced technology for an extraordinary user experience. A combination of impressive design and a spectacular and more advanced photography setup than ever before!",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/10083609/large/3efcbab52ccaefaacc94441dd01c62c3.png",
                            Model = "iPhone 12 Pro",
                            Price = 5070m
                        },
                        new
                        {
                            PhoneId = 37,
                            Color = "black",
                            Details = "The new iPhone 14 Plus from Apple! The powerful and modern one with the powerful processor that changes the legal game and advanced technology for an extraordinary user experience. A combination of impressive design and a spectacular and more advanced photography setup than ever before!",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/10967117/large/7b88836cdfd695ea84ad33508611dafa.jpg",
                            Model = "iPhone 14 Plus",
                            Price = 4500m
                        },
                        new
                        {
                            PhoneId = 38,
                            Color = "blue",
                            Details = "The new iPhone 12 from Apple! The powerful and modern one with the powerful processor that changes the legal game and advanced technology for an extraordinary user experience. A combination of impressive design and a spectacular and more advanced photography setup than ever before!",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/10967114/large/264e286843d12a1727bbd2a92764919b.jpg",
                            Model = "iPhone 12",
                            Price = 4800m
                        },
                        new
                        {
                            PhoneId = 39,
                            Color = "White",
                            Details = "The new iPhone 12 Pro Max from Apple! The powerful and modern one with the powerful processor that changes the legal game and advanced technology for an extraordinary user experience. A combination of impressive design and a spectacular and more advanced photography setup than ever before!",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/10967116/large/267eac5bfe18c8d7aca581506b881d5c.jpg",
                            Model = "iPhone 12 Pro Max",
                            Price = 6700m
                        },
                        new
                        {
                            PhoneId = 40,
                            Color = "Yellow",
                            Details = "The new iPhone 11 from Apple! The powerful and modern one with the powerful processor that changes the legal game and advanced technology for an extraordinary user experience. A combination of impressive design and a spectacular and more advanced photography setup than ever before!",
                            ImageData = "https://d3m9l0v76dty0.cloudfront.net/system/photos/11880336/large/84888daa2a057c6f6d6dd305a3ea1a85.jpg",
                            Model = "iPhone 11",
                            Price = 5000m
                        });
                });

            modelBuilder.Entity("ShopDAL.ProductOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsOrders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 1,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("ShopDAL.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "Adam@gmail.com",
                            Login = "Adam",
                            Password = "A111",
                            PhoneNumber = "0558748747",
                            RoleID = 1
                        },
                        new
                        {
                            UserId = 2,
                            Email = "Moshe@gmail.com",
                            Login = "Moshe",
                            Password = "M1111",
                            PhoneNumber = "0548983634",
                            RoleID = 2
                        },
                        new
                        {
                            UserId = 3,
                            Email = "Lidan@gmail.com",
                            Login = "Lidan",
                            Password = "L1111",
                            PhoneNumber = "0539856321",
                            RoleID = 2
                        });
                });

            modelBuilder.Entity("ShopDAL.UserOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersOrders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Created = new DateTime(2023, 8, 22, 20, 29, 36, 310, DateTimeKind.Local).AddTicks(3656),
                            UserId = 2
                        },
                        new
                        {
                            OrderId = 2,
                            Created = new DateTime(2023, 8, 22, 20, 29, 36, 310, DateTimeKind.Local).AddTicks(3703),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ShopDAL.ProductOrder", b =>
                {
                    b.HasOne("ShopDAL.UserOrder", "UserOrder")
                        .WithMany("ProductsOrder")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDAL.Phone", "Product")
                        .WithMany("PhonesOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("UserOrder");
                });

            modelBuilder.Entity("ShopDAL.UserOrder", b =>
                {
                    b.HasOne("ShopDAL.User", "User")
                        .WithMany("UserOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopDAL.Phone", b =>
                {
                    b.Navigation("PhonesOrders");
                });

            modelBuilder.Entity("ShopDAL.User", b =>
                {
                    b.Navigation("UserOrders");
                });

            modelBuilder.Entity("ShopDAL.UserOrder", b =>
                {
                    b.Navigation("ProductsOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
